<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Designed to allow support of themes in future without much pain -->

    <!-- Colors -->

    <!-- Hot Pink. Used to easily spot something you do/dont want to see. -->
    <Color x:Key="DebugColor">#FFFF00FF</Color>
    <SolidColorBrush x:Key="DebugBrush" Color="{StaticResource DebugColor}"/>


    <Color x:Key="ColorFont">#FFF0F0F0</Color>
    <SolidColorBrush x:Key="BrushFont" Color="{StaticResource ColorFont}"/>


    <Color x:Key="ColorBackgroundL">#FF353535</Color>
    <SolidColorBrush x:Key="BrushBackgroundL" Color="{StaticResource ColorBackgroundL}"/>

    <Color x:Key="ColorBackground">#FF323232</Color>
    <SolidColorBrush x:Key="BrushBackground" Color="{StaticResource ColorBackground}"/>

    <Color x:Key="ColorBackgroundD">#FF2D2D2D</Color>
    <SolidColorBrush x:Key="BrushBackgroundD" Color="{StaticResource ColorBackgroundD}"/>


    <Color x:Key="ColorMidgroundL">#FF444444</Color>
    <SolidColorBrush x:Key="BrushMidgroundL" Color="{StaticResource ColorMidgroundL}"/>

    <Color x:Key="ColorMidground">#FF424242</Color>
    <SolidColorBrush x:Key="BrushMidground" Color="{StaticResource ColorMidground}"/>

    <Color x:Key="ColorMidgroundD">#FF404040</Color>
    <SolidColorBrush x:Key="BrushMidgroundD" Color="{StaticResource ColorMidgroundD}"/>


    <Color x:Key="ColorForeground">#FF424242</Color>
    <SolidColorBrush x:Key="BrushForeground" Color="{StaticResource ColorForeground}"/>



    <Color x:Key="ColorBorder">#FF2A2A2A</Color>
    <SolidColorBrush x:Key="BrushBorder" Color="{StaticResource ColorBorder}"/>

    <Color x:Key="OrangeMid">#FFEEA145</Color>
    <SolidColorBrush x:Key="BrushOrangeMid" Color="{StaticResource OrangeMid}"/>





    <!--        -->
    <!-- Styles -->
    <!--        -->

    <!-- Base type for all styles to inherit off-->

    <Style TargetType="{x:Type Control}" x:Key="baseStyle">
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
    </Style>

    <!-- Default Styles -->
    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource BrushMidground}"/>
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="Background" Value="{StaticResource BrushBackground}"/>
    </Style>

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,0,10,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource BrushBorder}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="{StaticResource BrushMidground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Viewbox}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="VBTexbox" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource nkfont}"/>
        <Setter Property="FontSize" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
    </Style>


    <!--<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="Background" Value="{StaticResource BrushMidground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushMidground}"/>
    </Style>-->


    <!-- Explicit Styles -->

    <!-- A checkbox that looks like a button, Green = Enabled, Red = Disabled with Enabled/Disabled text. -->
    <Style x:Key="ToggleButton" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource baseStyle}">
        <Style.Resources>
            <!-- L = Light, N = Normal, D = Dark, DD = Double Dark-->
            <Color x:Key="ColorBtnOnL">#FF11DD11</Color>
            <Color x:Key="ColorBtnOnN">#FF11AA11</Color>
            <Color x:Key="ColorBtnOnD">#FF119911</Color>
            <Color x:Key="ColorBtnOnDD">#FF117711</Color>

            <Color x:Key="ColorBtnOffL">#FFDE2525</Color>
            <Color x:Key="ColorBtnOffN">#FFCC1111</Color>
            <Color x:Key="ColorBtnOffD">#FFBB1111</Color>
            <Color x:Key="ColorBtnOffDD">#FFAA1111</Color>

            <LinearGradientBrush x:Key="ToggleEnabledBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource ColorBtnOnL}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorBtnOnN}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToggleEnabledHighlighted" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource ColorBtnOnN}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorBtnOnD}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToggleEnabledPressed" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource ColorBtnOnD}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorBtnOnDD}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToggleDisabledBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource ColorBtnOffL}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorBtnOffN}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToggleDisabledHighlighted" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource ColorBtnOffN}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorBtnOffD}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ToggleDisabledPressed" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource ColorBtnOffD}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColorBtnOffDD}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="FocusVisualStyle"
          Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="200"
                                    Height="100"
                                    CornerRadius="3"
                                    BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush>
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{StaticResource ColorMidground}" Offset="0.0" />
                                                <GradientStop Color="{StaticResource ColorForeground}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush>
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <!-- This background never be used -->
                                                <GradientStop Color="{StaticResource DebugColor}" Offset="0.0" />
                                                <GradientStop Color="{StaticResource DebugColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <!-- These two properties are required for the checkbox control not to cry -->
                                    <Path x:Name="CheckMark" Visibility="Hidden"/>
                                    <Path x:Name="InderminateMark" Visibility="Hidden"/>

                                    <Label Visibility="Visible" Content="Disabled" x:Name="DisabledText" Margin="0,-8,0,0"
                                                VerticalAlignment="Top" HorizontalContentAlignment="Center" FontSize="22"/>
                                    <Label Visibility="Collapsed" Content="Enabled" x:Name="EnabledText" Margin="0,-8,0,0"
                                                VerticalAlignment="Top"  HorizontalContentAlignment="Center" FontSize="22"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>

                        <!-- Enabled triggers -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToggleEnabledBrush}"/>
                            <Setter TargetName="EnabledText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="DisabledText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ToggleEnabledHighlighted}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ToggleEnabledPressed}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>


                        <!-- Disabled triggers-->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ToggleDisabledBrush}"/>
                            <Setter TargetName="EnabledText" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="DisabledText" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ToggleDisabledHighlighted}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ToggleDisabledPressed}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueButton" TargetType="{x:Type Button}" BasedOn="{StaticResource baseStyle}">
        <Style.Resources>
            <Color x:Key="BlueLight">#FF00C7F5</Color>
            <Color x:Key="BlueMid">#FF00B7E0</Color>
            <Color x:Key="BlueDark">#FF00B0D0</Color>
            <Color x:Key="BlueDDark">#FF00A0C0</Color>

            <LinearGradientBrush x:Key="ButtonBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource BlueLight}" Offset="0"/>
                        <GradientStop Color="{StaticResource BlueMid}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="SelectedBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource BlueMid}" Offset="0"/>
                        <GradientStop Color="{StaticResource BlueDark}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="ClickedBrush" StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{StaticResource BlueDark}" Offset="0"/>
                        <GradientStop Color="{StaticResource BlueDDark}" Offset="1"/>
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>

        </Style.Resources>


        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                        x:Name="Border"
                        CornerRadius="2"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BrushBorder}"
                        Background="{StaticResource ButtonBrush}">
                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ClickedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- User controls -->


</ResourceDictionary>